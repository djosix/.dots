#!/usr/bin/env python3

import string
import sys
import hashlib
import getpass


def mess(input: str, n: int) -> str:
    charset = string.ascii_letters + string.digits
    data = input.encode() + bytes([n % 256])
    data = data[::-1] + bytes([b ^ i for i, b in enumerate(data)])
    data = hashlib.sha256(data + b'djosix' + data[::-1]).digest()
    selected = []
    for i in range(n):
        data = bytes((*data, data[i % len(data)], *data[::-1]))
        data = hashlib.sha256(data).digest()
        selected.append(charset[int.from_bytes(data, 'big') % len(charset)])
    return ''.join(selected)


if __name__ == '__main__':
    if len(sys.argv) not in [3]:
        print('usage: {} <length> <string>'.format(sys.argv[0]), file=sys.stderr)
        sys.exit(1)

    if not sys.argv[1].isdigit():
        print('error: {!r} cannot be converted into length'.format(sys.argv[1]), file=sys.stderr)
        sys.exit(1)

    n = int(sys.argv[1])

    if n < 1 or n > 128:
        print('error: N={} must be a value in [1, 128]', file=sys.stderr)
        sys.exit(1)

    s = sys.argv[2]
    if s == '-':
        s = input()
    elif s == '--':
        s = getpass.getpass('')

    print(mess(s, n))
