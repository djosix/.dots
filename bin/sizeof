#!/usr/bin/env python3

from os import walk, stat
from os.path import join, abspath, exists
from contextlib import suppress
from sys import argv, stderr

args = set(argv[1:])
humanized = '-h' in args
if humanized:
    args.remove('-h')

path_set = set(map(abspath, args))
file_set = set()
dir_set = set()

for path in path_set:
    if not exists(path):
        print(f"sizeof: cannot access '{path}': No such file or directory", file=stderr)
        continue
    for root, dirs, files in walk(path):
        file_set |= set(map(lambda f: join(root, f), files))
        dir_set |= set(map(lambda d: join(root, d), dirs))

total_size = 0
for path in (path_set | file_set | dir_set):
    with suppress(FileNotFoundError):
        total_size += stat(path, follow_symlinks=False).st_size

if humanized:
    precision = 1
    abbrevs = (
        (1 << 50, 'PB'),
        (1 << 40, 'TB'),
        (1 << 30, 'GB'),
        (1 << 20, 'MB'),
        (1 << 10, 'KB'),
        (1, 'bytes')
    )
    if total_size == 0:
        print('0 byte')
    elif total_size == 1:
        print('1 byte')
    else:
        for factor, suffix in abbrevs:
            if total_size >= factor:
                break
        print(f"{total_size / factor:.{precision}f} {suffix}")

else:
    print(total_size)
