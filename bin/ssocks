#!/usr/bin/env python3

import os, getpass
import functools
import argparse
import subprocess as sp

username = getpass.getuser()
sysname = os.uname().sysname
host = '127.0.0.1'
port = '39889'

assert sysname in ('Linux', 'Darwin'), 'unexpected system'

def get_args():
    ap = argparse.ArgumentParser()
    ap.add_argument('--network', '-n', default='Wi-Fi')
    ap.add_argument('--port', '-p', default='22', metavar='SSH_PORT')
    ap.add_argument('host', metavar='SSH_HOST')
    return ap.parse_args()

def call(*args, sudo=False):
    if username != 'root' and sudo:
        args = ['sudo', *args]
    print('[+]', *args)
    return sp.call(args)


def clean(args):
    print('===>', 'Clean up SOCKS settings...')

    if sysname == 'Darwin':
        call('sudo', 'networksetup', '-setsocksfirewallproxy', args.network, '', '')
        call('sudo', 'networksetup', '-setsocksfirewallproxystate', args.network, 'off')

    elif sysname == 'Linux':
        call('gsettings', 'set', 'org.gnome.system.proxy', 'mode', 'none')
        call('gsettings', 'set', 'org.gnome.system.proxy.socks', 'host', '')
        call('gsettings', 'set', 'org.gnome.system.proxy.socks', 'port', '')


def start(args):
    print('===>', 'Setting up SOCKS proxy...')

    if sysname == 'Darwin':
        call('sudo', 'networksetup', '-setsocksfirewallproxy', args.network, host, port)
        call('sudo', 'networksetup', '-setsocksfirewallproxystate', args.network, 'on')
        print('===>', 'Start connection...')
        call('ssh', '-ND', port, args.host, '-p', args.port)
    elif sysname == 'Linux':
        call('gsettings', 'set', 'org.gnome.system.proxy.socks', 'host', host)
        call('gsettings', 'set', 'org.gnome.system.proxy.socks', 'port', port)
        call('gsettings', 'set', 'org.gnome.system.proxy', 'mode', 'manual')
        print('===>', 'Start connection...')
        call('ssh', '-ND', port, args.host, '-p', args.port)


if __name__ == '__main__':
    args = get_args()
    try:
        start(args)
    except:
        print(' (ABORT)')
    finally:
        clean(args)
