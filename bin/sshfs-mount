#!/bin/bash

fail() {
    echo 'Error:' $1
    exit 1
}

print_usage() {
    echo 'Usage: $1 = mount_point, $2 = user@host:path'
}

which sshfs  > /dev/null || fail 'Command not found: sshfs'
which umount > /dev/null || fail 'Command not found: umount'
uname=`uname`
[[ $uname = Linux || $uname = Darwin ]] || fail 'Invalid OS: $uname'
[[ $1 = '-h' ]] && {
    print_usage
    exit
}
[[ $# = 2 ]] || {
    print_usage
    fail "Wrong number of arguments: $#"
}

dir=$1
shift

if [[ -e $dir ]]; then
    if [[ -d $dir ]]; then
        newdir=false
    else
        fail 'Cannot create directory'
    fi
else
    mkdir $dir && echo "Created directory: $dir" && newdir=true
fi

remove_created_dir() {
    $newdir && rmdir $dir && echo "Removed directory: $dir"
}

end() {
    echo "Unmounting $dir"
    umount -f $dir
    remove_created_dir
    exit 0
}

trap end SIGINT

sshfs $@ $dir -f &
pid=$!

echo "Mounted at: $dir"
echo "Pid of sshfs: $pid"
echo 'Press Ctrl-C to unmount'

while true; do
    [[ `ps -p $pid | sed -n 2p` ]] || {
        echo 'Process is dead'
        remove_created_dir
        exit
    }
    sleep 5
done
